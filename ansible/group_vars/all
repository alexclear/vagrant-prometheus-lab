prometheus_remote_writes:
  - url: "http://172.16.197.3:8428/api/v1/write"
    queue_config_max_samples_per_send: 10000
victoriametrics_container_host_address: 0.0.0.0
apt_key_url: "https://download.docker.com/linux/ubuntu/gpg"
alertmanagers_group_name: "prom_alertmanagers"
alertmanager_advertise_address: "{{ ansible_eth1.ipv4.address }}"
alertmanager_default_receiver: "slack-test"
alertmanager_receivers:
  - name: "slack-test"
    configs:
      slack_configs:
        - channel: "'#vagrant-alerts'"
          send_resolved: "true"
          api_url: "'https://hooks.slack.com/services/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'"
install_kernel_extras_dio: False
ext_prometheus_data_volume: /var/lib/docker-extvols/prometheus/data
ext_prometheus_config_volume: /var/lib/docker-extvols/prometheus/config
nginx_lua_prometheus: True
grafana_anon_access_enabled: True
grafana_admin_user: test
grafana_default_dashboard_slug: cpu
grafana_admin_password: ooZ6ukei
grafana_enable_internal_metrics: True
grafana_prometheus_address: 172.16.197.3
grafana_prometheus_port: 8428
grafana_auto_prometheus_config: True
grafana_auto_dashboards_config: True
nginx_package_name: "nginx-extras"
nginx_extra_conf_options: |
        include /etc/nginx/modules-enabled/*.conf;
nginx_extra_http_options: |
        lua_shared_dict prometheus_metrics 10M;
        lua_package_path "/var/lib/nginx-lua-prometheus/?.lua";
        init_by_lua '
          prometheus = require("prometheus").init("prometheus_metrics")
          metric_requests = prometheus:counter(
            "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
          metric_latency = prometheus:histogram(
            "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
          metric_latency_status = prometheus:histogram(
            "nginx_http_request_duration_seconds_status", "HTTP request latency by status", {"host", "status"})
          metric_connections = prometheus:gauge(
            "nginx_http_connections", "Number of HTTP connections", {"state"})
        ';
        log_by_lua '
          metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
          metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
          metric_latency_status:observe(tonumber(ngx.var.request_time), {ngx.var.server_name, ngx.var.status})
        ';

prometheus_jobs:
  - name: nodesebpf
    metrics_path: "/metrics"
    targets:
      - host: 172.16.197.2
        port: 9435
      - host: 172.16.197.3
        port: 9435
      - host: 172.16.197.4
        port: 9435
  - name: nodes
    metrics_path: "/metrics"
    targets:
      - host: 172.16.197.2
        port: 9100
      - host: 172.16.197.3
        port: 9100
      - host: 172.16.197.4
        port: 9100
  - name: nginxes
    metrics_path: "/metrics"
    targets:
      - host: 172.16.197.2
        port: 9145
      - host: 172.16.197.3
        port: 9145
      - host: 172.16.197.4
        port: 9145
  - name: docker
    metrics_path: "/metrics"
    targets:
      - host: 172.16.197.2
        port: 9323

grafana_dashboards_grafonnet:
  - grafana_node_dashboards_grafonnet
  - grafana_nginx_dashboards_grafonnet
